<?xml version="1.0"?>

<st-source>
<time-stamp>From VisualWorksÂ® NonCommercial, 7.4.1 of May 30, 2006 on June 19, 2023 at 12:38:21 am</time-stamp>


<class>
<name>Osoba</name>
<environment>Smalltalk</environment>
<super>DaskalosDataObject</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>jmeno prijmeni </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category>DaskalosUserClasses</category>
<attributes>
<package>DaskalosUserClasses</package>
</attributes>
</class>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Osoba class</class-id> <category>instance variables behavior</category>

<body package="DaskalosUserClasses" selector="instVarTypes">instVarTypes
"resource for Daskalos"
^((Core.Dictionary new) add: (#jmeno -&gt; Core.String); add: (#prijmeni -&gt; Core.String); yourself)</body>
</methods>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Osoba</class-id> <category>accessing</category>

<body package="DaskalosUserClasses" selector="jmeno">jmeno
"generated by Daskalos"

     ^jmeno</body>

<body package="DaskalosUserClasses" selector="jmeno:">jmeno: anObject
"generated by Daskalos"

     jmeno := (self checkValue: anObject forVariable: #jmeno)</body>

<body package="DaskalosUserClasses" selector="prijmeni">prijmeni
"generated by Daskalos"

     ^prijmeni</body>

<body package="DaskalosUserClasses" selector="prijmeni:">prijmeni: anObject
"generated by Daskalos"

     prijmeni := (self checkValue: anObject forVariable: #prijmeni)</body>
</methods>

<methods>
<class-id>Osoba</class-id> <category>instance initialization</category>

<body package="DaskalosUserClasses" selector="initialize">initialize
"generated by Daskalos"

     super initialize.
     jmeno := nil.
     prijmeni := nil.
</body>
</methods>


<class>
<name>Ctenar</name>
<environment>Smalltalk</environment>
<super>Osoba</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>pujcky </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category>DaskalosUserClasses</category>
<attributes>
<package>DaskalosUserClasses</package>
</attributes>
</class>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Ctenar class</class-id> <category>instance variables behavior</category>

<body package="DaskalosUserClasses" selector="instVarTypes">instVarTypes
"resource for Daskalos"
^((Core.Dictionary new) add: (#prijmeni -&gt; Core.String); add: (#jmeno -&gt; Core.String); add: (#pujcky -&gt; Core.Object); yourself)</body>
</methods>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Ctenar</class-id> <category>accessing</category>

<body package="DaskalosUserClasses" selector="pujcky">pujcky
"generated by Daskalos"

     ^pujcky</body>

<body package="DaskalosUserClasses" selector="pujcky:">pujcky: anObject
"generated by Daskalos"

     pujcky := (self checkValue: anObject forVariable: #pujcky)</body>
</methods>

<methods>
<class-id>Ctenar</class-id> <category>instance initialization</category>

<body package="DaskalosUserClasses" selector="initialize">initialize
"generated by Daskalos"

     super initialize.
     pujcky := nil.
</body>
</methods>


<class>
<name>Autor</name>
<environment>Smalltalk</environment>
<super>Osoba</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>datumNarozeni datumUmrti literarniObdobi </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category>DaskalosUserClasses</category>
<attributes>
<package>DaskalosUserClasses</package>
</attributes>
</class>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Autor class</class-id> <category>instance variables behavior</category>

<body package="DaskalosUserClasses" selector="instVarTypes">instVarTypes
"resource for Daskalos"
^((Core.Dictionary new) add: (#datumNarozeni -&gt; Core.Date); add: (#prijmeni -&gt; Core.String); add: (#literarniObdobi -&gt; Core.String); add: (#jmeno -&gt; Core.String); add: (#datumUmrti -&gt; Core.Date); yourself)</body>
</methods>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Autor</class-id> <category>accessing</category>

<body package="DaskalosUserClasses" selector="datumNarozeni">datumNarozeni
"generated by Daskalos"

     ^datumNarozeni</body>

<body package="DaskalosUserClasses" selector="datumNarozeni:">datumNarozeni: anObject
"generated by Daskalos"

     datumNarozeni := (self checkValue: anObject forVariable: #datumNarozeni)</body>

<body package="DaskalosUserClasses" selector="datumUmrti">datumUmrti
"generated by Daskalos"

     ^datumUmrti</body>

<body package="DaskalosUserClasses" selector="datumUmrti:">datumUmrti: anObject
"generated by Daskalos"

     datumUmrti := (self checkValue: anObject forVariable: #datumUmrti)</body>

<body package="DaskalosUserClasses" selector="literarniObdobi">literarniObdobi
"generated by Daskalos"

     ^literarniObdobi</body>

<body package="DaskalosUserClasses" selector="literarniObdobi:">literarniObdobi: anObject
"generated by Daskalos"

     literarniObdobi := (self checkValue: anObject forVariable: #literarniObdobi)</body>
</methods>

<methods>
<class-id>Autor</class-id> <category>instance initialization</category>

<body package="DaskalosUserClasses" selector="initialize">initialize
"generated by Daskalos"

     super initialize.
     datumNarozeni := nil.
     datumUmrti := nil.
     literarniObdobi := nil.
</body>
</methods>


<class>
<name>Kniha</name>
<environment>Smalltalk</environment>
<super>DaskalosDataObject</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>nazev iban autor rokVydani </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category>DaskalosUserClasses</category>
<attributes>
<package>DaskalosUserClasses</package>
</attributes>
</class>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Kniha class</class-id> <category>instance variables behavior</category>

<body package="DaskalosUserClasses" selector="instVarTypes">instVarTypes
"resource for Daskalos"
^((Core.Dictionary new) add: (#iban -&gt; Core.String); add: (#nazev -&gt; Core.String); add: (#rokVydani -&gt; Core.Number); add: (#autor -&gt; Core.Object); yourself)</body>
</methods>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Kniha</class-id> <category>accessing</category>

<body package="DaskalosUserClasses" selector="autor">autor
"generated by Daskalos"

     ^autor</body>

<body package="DaskalosUserClasses" selector="autor:">autor: anObject
"generated by Daskalos"

     autor := (self checkValue: anObject forVariable: #autor)</body>

<body package="DaskalosUserClasses" selector="iban">iban
"generated by Daskalos"

     ^iban</body>

<body package="DaskalosUserClasses" selector="iban:">iban: anObject
"generated by Daskalos"

     iban := (self checkValue: anObject forVariable: #iban)</body>

<body package="DaskalosUserClasses" selector="nazev">nazev
"generated by Daskalos"

     ^nazev</body>

<body package="DaskalosUserClasses" selector="nazev:">nazev: anObject
"generated by Daskalos"

     nazev := (self checkValue: anObject forVariable: #nazev)</body>

<body package="DaskalosUserClasses" selector="rokVydani">rokVydani
"generated by Daskalos"

     ^rokVydani</body>

<body package="DaskalosUserClasses" selector="rokVydani:">rokVydani: anObject
"generated by Daskalos"

     rokVydani := (self checkValue: anObject forVariable: #rokVydani)</body>
</methods>

<methods>
<class-id>Kniha</class-id> <category>instance initialization</category>

<body package="DaskalosUserClasses" selector="initialize">initialize
"generated by Daskalos"

     super initialize.
     nazev := nil.
     iban := nil.
     autor := nil.
     rokVydani := nil.
</body>
</methods>


<class>
<name>Pujcka</name>
<environment>Smalltalk</environment>
<super>DaskalosDataObject</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>datumPujceni datumVraceni knihy pobocka </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category>DaskalosUserClasses</category>
<attributes>
<package>DaskalosUserClasses</package>
</attributes>
</class>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Pujcka class</class-id> <category>instance variables behavior</category>

<body package="DaskalosUserClasses" selector="instVarTypes">instVarTypes
"resource for Daskalos"
^((Core.Dictionary new) add: (#datumPujceni -&gt; Core.Date); add: (#datumVraceni -&gt; Core.Date); add: (#knihy -&gt; Core.Set); add: (#pobocka -&gt; Core.Object); yourself)</body>
</methods>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Pujcka</class-id> <category>accessing</category>

<body package="DaskalosUserClasses" selector="datumPujceni">datumPujceni
"generated by Daskalos"

     ^datumPujceni</body>

<body package="DaskalosUserClasses" selector="datumPujceni:">datumPujceni: anObject
"generated by Daskalos"

     datumPujceni := (self checkValue: anObject forVariable: #datumPujceni)</body>

<body package="DaskalosUserClasses" selector="datumVraceni">datumVraceni
"generated by Daskalos"

     ^datumVraceni</body>

<body package="DaskalosUserClasses" selector="datumVraceni:">datumVraceni: anObject
"generated by Daskalos"

     datumVraceni := (self checkValue: anObject forVariable: #datumVraceni)</body>

<body package="DaskalosUserClasses" selector="knihy">knihy
"generated by Daskalos"

     ^knihy</body>

<body package="DaskalosUserClasses" selector="pobocka">pobocka
"generated by Daskalos"

     ^pobocka</body>

<body package="DaskalosUserClasses" selector="pobocka:">pobocka: anObject
"generated by Daskalos"

     pobocka := (self checkValue: anObject forVariable: #pobocka)</body>
</methods>

<methods>
<class-id>Pujcka</class-id> <category>instance initialization</category>

<body package="DaskalosUserClasses" selector="initialize">initialize
"generated by Daskalos"

     super initialize.
     datumPujceni := nil.
     datumVraceni := nil.
     knihy := Set new.
     pobocka := nil.
</body>
</methods>


<class>
<name>Pobocka</name>
<environment>Smalltalk</environment>
<super>DaskalosDataObject</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>ulice mesto nazev </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category>DaskalosUserClasses</category>
<attributes>
<package>DaskalosUserClasses</package>
</attributes>
</class>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Pobocka class</class-id> <category>instance variables behavior</category>

<body package="DaskalosUserClasses" selector="instVarTypes">instVarTypes
"resource for Daskalos"
^((Core.Dictionary new) add: (#nazev -&gt; Core.String); add: (#ulice -&gt; Core.String); add: (#mesto -&gt; Core.String); yourself)</body>
</methods>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Pobocka</class-id> <category>accessing</category>

<body package="DaskalosUserClasses" selector="mesto">mesto
"generated by Daskalos"

     ^mesto</body>

<body package="DaskalosUserClasses" selector="mesto:">mesto: anObject
"generated by Daskalos"

     mesto := (self checkValue: anObject forVariable: #mesto)</body>

<body package="DaskalosUserClasses" selector="nazev">nazev
"generated by Daskalos"

     ^nazev</body>

<body package="DaskalosUserClasses" selector="nazev:">nazev: anObject
"generated by Daskalos"

     nazev := (self checkValue: anObject forVariable: #nazev)</body>

<body package="DaskalosUserClasses" selector="ulice">ulice
"generated by Daskalos"

     ^ulice</body>

<body package="DaskalosUserClasses" selector="ulice:">ulice: anObject
"generated by Daskalos"

     ulice := (self checkValue: anObject forVariable: #ulice)</body>
</methods>

<methods>
<class-id>Pobocka</class-id> <category>instance initialization</category>

<body package="DaskalosUserClasses" selector="initialize">initialize
"generated by Daskalos"

     super initialize.
     ulice := nil.
     mesto := nil.
     nazev := nil.
</body>
</methods>


</st-source>
